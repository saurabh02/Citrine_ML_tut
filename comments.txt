Here are my comments:

1. You should organize the folder better. A user should see your folder and know exactly what's what. e.g.:
	* figure outputs in a separate folder, e.g. "output_figs"
	* CSV data dumps in separate folder, e.g. "data_records"
	* Code and historical code clearly labeled. Either put the historical code in an "archive" folder, or better yet, label the code with the corresponding step on the Google Doc, e.g. "step_1" folder or "step_2" folder. Then at least I will know which code corresponds to what step.
	
2. Add a place in the code for the user to enter their API key before calling MPRester. They can leave it as None if they have already set the MAPI_KEY.

3. Put comments/docstring of functions like naiveVectorize inside the function itself, not above them. See PEP guidelines.

4. I am not sure exactly what you are doing to get the average band gap in In[10], but it should be much easier to get the average of a column using Pandas than that.

5. Your use of the apply() function is not clean. That function will pass in all the data, and you have to resort to putting arbitrary and meaningless indices (e.g., x[0], x[1], x[2]) etc throughout your code. That is not the way a clean function is written (i.e., takes in some vector 'x' that has no clear organization). You need to figure out how to apply a function to *single* column of data, and the function that you pass into apply (e.g., extractphysicalFeatures) needs to only take in the data it needs. I think you need to research pandas a bit more.

6. Naming conventions should follow PEP. e.g., methods/functions should be named like this: extract_physical_features.
